name: mcp-guard
runtime: typescript
module: src/index.ts
description: |
  An MCP guardrail with built-in AI-powered moderation that aggregates multiple MCP servers into one secure interface.
  
  This server acts as a protective layer that can wrap other MCP servers, providing:
  - AI-powered moderation to prevent prompt injection attacks
  - Transparent proxying of tools, prompts, and resources
  - Support for both local and remote MCP servers
  
  ## Configuration
  
  The server configuration accepts:
  - servers: An array of server configurations to aggregate
  - apiKey: API key for General Analysis moderation service
  - enableGuardApi: Enable AI-powered moderation (default: false)
  
  Each server config should have:
  - name: The name of the server
  - For local servers:
    - command: The command to run the server
    - args: Array of arguments for the command
    - env: Optional environment variables
  - For remote servers:
    - url: The URL of the remote server
  
  Example configuration:
  ```json
  {
    "servers": [{
      "name": "filesystem",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-filesystem", "/path/to/directory"]
    }],
    "apiKey": "your-api-key",
    "enableGuardApi": true
  }
  ```
  
  ## Environment Variables
  
  You can also configure via environment variables:
  - API_KEY: API key for General Analysis moderation service
  - ENABLE_GUARD_API: Set to "true" to enable AI-powered moderation
  
  Config values take precedence over environment variables.
config:
  servers: []
  apiKey: ""
  enableGuardApi: false 